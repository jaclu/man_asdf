#!/bin/sh
__version="1.1.4  2022-04-14"
#
#  Copyright (c) 2021,2022: Jacob.Lundqvist@gmail.com
#  License: MIT
#
#  Part of https://github.com/jaclu/man_asdf
#
#
#  Displays version specific man pages for asdf items, that contains a man page
#
#  TODO: 21-10-01 Find a tmux plugin where the bin is not named as the plugin,
#                 but it does have man pages, and see if that case can be handled.
#                 maven is one such where the bin is mvn,
#                 but since it doesn't have man pages, it isn't a good test candidate
#

manpage="$1"
alt_version="$2"

man_holder="share/man"


show_help() {
    echo "man_asdf $__version"
    echo
    echo "Syntax:  man_asdf [-h --help] asdf_command [alt_version]"
    echo "  alt_version must still be installed in order to be viewed!"
    echo
    echo "Displays man page associated with an asdf command."
    echo "Please note that not all asdf commands come with man pages"
    echo "in such cases you will get a notification stating such."
    echo
    echo "If current version is system, you will be informed that this"
    echo "is the case and all installed versions will be listed."
    echo "If you supply a version, that versions man page will be displayed."
    echo "When no version is specified, the current asdf version is assumed."
    echo
    echo "Examples: man_asdf python"
    echo "          man_asdf python 3.9.7"
}



#================================================================
#
#   Main
#


#
#   No param or help requested
#
case $manpage in

    "" | "-h" | "--help" | "?" )
        show_help
        exit 1

esac

if ! asdf plugin list | grep -q "$manpage"; then
    echo "ERROR: not an asdf app!"
    exit 1
fi

#
#  in case the cmd is not named as the plugin, this filters out the message:
#  unknown command: X. Perhaps you have to reshim?
#
binary="$(asdf which "$manpage" 2> /dev/null)"

base_path="${binary%/bin/*}"

if [ -n "$alt_version" ]; then
    base_path="${ASDF_DATA_DIR}/installs/${manpage}/${alt_version}"
    if [ ! -d "$base_path" ]; then
        echo "ERROR: $manpage version: $alt_version is not installed!"
        exit 1
    fi
elif asdf current "$manpage" | grep -q " system "; then
    echo "ERROR: this is an asdf app, but you are using the system version!"
    echo "       If you supply a version from below, you can see that versions man page"
    asdf list "$manpage"
    exit 1
else
    # check if there even is any man pages for this command
    version="$(asdf current "$manpage" | awk '{print $2}')"
    echo "Displaying man page for version: $version"
    base_path="${ASDF_DATA_DIR}/installs/${manpage}/${version}"
fi

if [ -z "$base_path" ]; then
    echo "ERROR: failed to find base path for: $manpage"
    exit 1
fi

man_path="${base_path}/$man_holder"
if [ ! -d "$man_path" ]; then
    echo "ERROR: this asdf command does not seem to have any man page"
    echo "       not found: $man_path"
    exit 1
fi

#
#  some packages like python has version numbers as appendix
#  to the man page. If basename not found, try with first file found,
#  and strip down any numbers to after the first dot.
#
if [ ! -f "${man_path}/man1/${manpage}" ]; then
    #
    #  22-04-14 shell check recommends to use find over ls, but so far
    #  I have failed to figure out proper syntax for that...
    #
    #  shellcheck disable=SC2012
    fname=$(ls "${man_path}/man1" | head -n 1)

    # shorten multiple numbers to just one
    manpage="${fname%.*}"
    if [ -z "$manpage" ]; then
        echo "ERROR: manpage not found in ${man_path}/man1"
        exit
    fi
fi


cmd="man -M ${man_path} $manpage"
$cmd
